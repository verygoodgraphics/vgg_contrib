cmake_minimum_required(VERSION 3.7)

project(vgg_contrib)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

cmake_policy(SET CMP0077 NEW)
option(VGG_ADD_NANOBIND "add nanobind" ON)

add_subdirectory(json)
add_subdirectory(picosha2)
add_subdirectory(sdefl)
add_subdirectory(zlib)
add_subdirectory(zstd)
add_subdirectory(minifb)
add_subdirectory(libpng)
add_subdirectory(libjpeg-turbo)
add_subdirectory(libwebp)
add_subdirectory(boost)
add_subdirectory(valijson)
add_subdirectory(zip)
add_subdirectory(glm)
add_subdirectory(yoga)
add_subdirectory(rxcpp)

if(VGG_ADD_NANOBIND)
  add_subdirectory(nanobind)
endif()

# Debug info
message(STATUS "VGG_CONTRIB_JSON_INCLUDE: " ${VGG_CONTRIB_JSON_INCLUDE})
message(STATUS "VGG_CONTRIB_PICOSHA2_INCLUDE: " ${VGG_CONTRIB_PICOSHA2_INCLUDE})
message(STATUS "VGG_CONTRIB_SDEFL_INCLUDE: " ${VGG_CONTRIB_SDEFL_INCLUDE})
message(STATUS "VGG_CONTRIB_ZLIB_INCLUDE: " ${VGG_CONTRIB_ZLIB_INCLUDE})
message(STATUS "VGG_CONTRIB_ZLIB_CONF_INCLUDE: " ${VGG_CONTRIB_ZLIB_CONF_INCLUDE})
message(STATUS "VGG_CONTRIB_ZSTD_INCLUDE: " ${VGG_CONTRIB_ZSTD_INCLUDE})
message(STATUS "VGG_CONTRIB_MINIFB_INCLUDE: " ${VGG_CONTRIB_MINIFB_INCLUDE})
message(STATUS "VGG_CONTRIB_LIBPNG_INCLUDE: " ${VGG_CONTRIB_LIBPNG_INCLUDE})
message(STATUS "VGG_CONTRIB_LIBPNG_CONF_INCLUDE: " ${VGG_CONTRIB_LIBPNG_CONF_INCLUDE})
message(STATUS "VGG_CONTRIB_LIBJPG_INCLUDE: " ${VGG_CONTRIB_LIBJPG_INCLUDE})
message(STATUS "VGG_CONTRIB_LIBJPG_CONF_INCLUDE: " ${VGG_CONTRIB_LIBJPG_CONF_INCLUDE})
message(STATUS "VGG_CONTRIB_LIBWEBP_INCLUDE: " ${VGG_CONTRIB_LIBWEBP_INCLUDE})
message(STATUS "VGG_CONTRIB_LIBWEBP_CONF_INCLUDE: " ${VGG_CONTRIB_LIBWEBP_CONF_INCLUDE})
message(STATUS "VGG_CONTRIB_BOOST_INCLUDE: " ${VGG_CONTRIB_BOOST_INCLUDE})
message(STATUS "VGG_CONTRIB_VALIJSON_INCLUDE: " ${VGG_CONTRIB_VALIJSON_INCLUDE})
message(STATUS "VGG_CONTRIB_ZIP_INCLUDE: " ${VGG_CONTRIB_ZIP_INCLUDE})
message(STATUS "VGG_CONTRIB_GLM_INCLUDE: " ${VGG_CONTRIB_GLM_INCLUDE})
message(STATUS "VGG_CONTRIB_RXCPP_INCLUDE: " ${VGG_CONTRIB_RXCPP_INCLUDE})

# Integration
set(VGG_CONTRIB_INCLUDE "\
${VGG_CONTRIB_JSON_INCLUDE};\
${VGG_CONTRIB_PICOSHA2_INCLUDE};\
${VGG_CONTRIB_SDEFL_INCLUDE};\
${VGG_CONTRIB_ZLIB_INCLUDE};\
${VGG_CONTRIB_ZLIB_CONF_INCLUDE};\
${VGG_CONTRIB_ZSTD_INCLUDE};\
${VGG_CONTRIB_MINIFB_INCLUDE};\
${VGG_CONTRIB_LIBPNG_INCLUDE};\
${VGG_CONTRIB_LIBPNG_CONF_INCLUDE};\
${VGG_CONTRIB_LIBJPG_INCLUDE};\
${VGG_CONTRIB_LIBJPG_CONF_INCLUDE};\
${VGG_CONTRIB_LIBWEBP_INCLUDE};\
${VGG_CONTRIB_LIBWEBP_CONF_INCLUDE};\
${VGG_CONTRIB_BOOST_INCLUDE};\
${VGG_CONTRIB_VALIJSON_INCLUDE};\
${VGG_CONTRIB_ZIP_INCLUDE};\
${VGG_CONTRIB_GLM_INCLUDE};\
${VGG_CONTRIB_RXCPP_INCLUDE};\
"
  CACHE STRING "" FORCE)
mark_as_advanced(VGG_CONTRIB_INCLUDE)

# Test
add_executable(contrib_test test.cc)
set_target_properties(contrib_test PROPERTIES
  CXX_STANDARD 17
)
# target_include_directories(contrib_test PRIVATE ${VGG_CONTRIB_INCLUDE})
target_include_directories(contrib_test PRIVATE
  ${VGG_CONTRIB_JSON_INCLUDE}
  ${VGG_CONTRIB_PICOSHA2_INCLUDE}
  ${VGG_CONTRIB_SDEFL_INCLUDE}
  ${VGG_CONTRIB_ZLIB_INCLUDE}
  ${VGG_CONTRIB_ZLIB_CONF_INCLUDE}
  ${VGG_CONTRIB_ZSTD_INCLUDE}
  ${VGG_CONTRIB_MINIFB_INCLUDE}
  ${VGG_CONTRIB_LIBPNG_INCLUDE}
  ${VGG_CONTRIB_LIBPNG_CONF_INCLUDE}
  ${VGG_CONTRIB_LIBJPG_INCLUDE}
  ${VGG_CONTRIB_LIBJPG_CONF_INCLUDE}
  ${VGG_CONTRIB_LIBWEBP_INCLUDE}
  ${VGG_CONTRIB_LIBWEBP_CONF_INCLUDE}
  ${VGG_CONTRIB_BOOST_INCLUDE}
  ${VGG_CONTRIB_VALIJSON_INCLUDE}
  ${VGG_CONTRIB_RXCPP_INCLUDE}
)
target_link_libraries(contrib_test minifb zlib libzstd_shared png jpeg webp boost_locale zip)
