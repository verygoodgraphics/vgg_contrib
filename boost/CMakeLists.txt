cmake_minimum_required(VERSION 3.7)
project(vgg_contrib_boost)

# project-wide configs
set(boost_prefix upstream/boost_1_80_0)
add_compile_definitions(BOOST_ALL_NO_LIB)
add_compile_options(-Wno-deprecated-declarations)
include_directories(${boost_prefix})

# for boost-locale
add_subdirectory(${boost_prefix}/libs/assert)
add_subdirectory(${boost_prefix}/libs/config)
add_subdirectory(${boost_prefix}/libs/function)
add_subdirectory(${boost_prefix}/libs/bind)
add_subdirectory(${boost_prefix}/libs/core)
add_subdirectory(${boost_prefix}/libs/integer)
add_subdirectory(${boost_prefix}/libs/preprocessor)
add_subdirectory(${boost_prefix}/libs/throw_exception)
add_subdirectory(${boost_prefix}/libs/type_index)
add_subdirectory(${boost_prefix}/libs/type_traits)
add_subdirectory(${boost_prefix}/libs/typeof)
add_subdirectory(${boost_prefix}/libs/static_assert)
add_subdirectory(${boost_prefix}/libs/container_hash)
add_subdirectory(${boost_prefix}/libs/smart_ptr)
add_subdirectory(${boost_prefix}/libs/detail)
add_subdirectory(${boost_prefix}/libs/move)
add_subdirectory(${boost_prefix}/libs/iterator)
add_subdirectory(${boost_prefix}/libs/concept_check)
add_subdirectory(${boost_prefix}/libs/conversion)
add_subdirectory(${boost_prefix}/libs/function_types)
add_subdirectory(${boost_prefix}/libs/fusion)
add_subdirectory(${boost_prefix}/libs/mpl)
add_subdirectory(${boost_prefix}/libs/optional)
add_subdirectory(${boost_prefix}/libs/utility)
add_subdirectory(${boost_prefix}/libs/tuple)
add_subdirectory(${boost_prefix}/libs/predef)
add_subdirectory(${boost_prefix}/libs/io)
add_subdirectory(${boost_prefix}/libs/thread)
add_subdirectory(${boost_prefix}/libs/atomic)
add_subdirectory(${boost_prefix}/libs/chrono)
add_subdirectory(${boost_prefix}/libs/container)
add_subdirectory(${boost_prefix}/libs/date_time)
add_subdirectory(${boost_prefix}/libs/exception)
add_subdirectory(${boost_prefix}/libs/intrusive)
add_subdirectory(${boost_prefix}/libs/system)
add_subdirectory(${boost_prefix}/libs/winapi)
add_subdirectory(${boost_prefix}/libs/algorithm)
add_subdirectory(${boost_prefix}/libs/lexical_cast)
add_subdirectory(${boost_prefix}/libs/align)
add_subdirectory(${boost_prefix}/libs/ratio)
add_subdirectory(${boost_prefix}/libs/numeric/conversion)
add_subdirectory(${boost_prefix}/libs/range)
add_subdirectory(${boost_prefix}/libs/tokenizer)
add_subdirectory(${boost_prefix}/libs/variant2)
add_subdirectory(${boost_prefix}/libs/array)
add_subdirectory(${boost_prefix}/libs/regex)
add_subdirectory(${boost_prefix}/libs/unordered)
add_subdirectory(${boost_prefix}/libs/rational)
add_subdirectory(${boost_prefix}/libs/mp11)
add_subdirectory(${boost_prefix}/libs/locale)

# for boost-asio and boost-beast
add_subdirectory(${boost_prefix}/libs/context)
add_subdirectory(${boost_prefix}/libs/coroutine)
add_subdirectory(${boost_prefix}/libs/endian)
add_subdirectory(${boost_prefix}/libs/logic)
add_subdirectory(${boost_prefix}/libs/pool)
add_subdirectory(${boost_prefix}/libs/asio)
add_subdirectory(${boost_prefix}/libs/beast)

# setup cache variable for global use
set(VGG_CONTRIB_BOOST_INCLUDE ${CMAKE_CURRENT_SOURCE_DIR}/${boost_prefix} CACHE PATH "" FORCE)
mark_as_advanced(VGG_CONTRIB_BOOST_INCLUDE)
